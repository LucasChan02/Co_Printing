 1 #!/usr/bin/python3
  2 # coding=utf8
  3 # Date:2022/06/30
  4 import sys
  5 import time
  6 import rospy
  7 #import signal
  8 #import Board as Board
  9 from kinematics import ik_transform
 10 from armpi_pro import bus_servo_control
 11 from hiwonder_servo_msgs.msg import MultiRawIdPosDur
 12 
 13 print('''
 14 **********************************************************
 15 ****功能:幻尔科技树莓派扩展板，运动学XYZ轴移动例程*****
 16 **********************************************************
 17 ----------------------------------------------------------
 18 Official website:https://www.hiwonder.com
 19 Online mall:https://hiwonder.tmall.com
 20 ----------------------------------------------------------
 21 Tips:
 22  * Ctrl+C to stop
 23 ----------------------------------------------------------
 24 ''')
 25 
 26 if sys.version_info.major == 2:
 27     print('Please run this program with python3!')
 28     sys.exit(0)
 29 
 30 ik = ik_transform.ArmIK()
 31 
 32 # Processing before closing
 33 def stop():
 34     # Initial position
 35     target = ik.setPitchRanges((0.00, 0.12, 0.08), -145, -180, 0)
 36     if target:
 37         servo_data = target[1]
 38         bus_servo_control.set_servos(joints_pub, 1500, ((1, 200), (2, 500),     (3, servo_data['servo3']),
 39                         (4, servo_data['servo4']),(5, servo_data['servo5']),    (6, servo_data['servo6'])))
 40 
 41 
 42 if __name__ == '__main__':
 43     # Initialize node
 44     rospy.init_node('arm_test2', log_level=rospy.DEBUG)
 45     rospy.on_shutdown(stop)
 46     # Servo release
 47     joints_pub = rospy.Publisher('/servo_controllers/port_id_1/multi_id_pos_    dur', MultiRawIdPosDur, queue_size=1)
 48     rospy.sleep(0.2) # Delay
 49 
 50 
 51     # Parameters: ((x, y, z), pitch angle, min pitch angle, max pitch angle)
 52     # Default: ((0.0, 0.12, 0.15), -90, -180, 0) 
 53 
 54     # Set initial position
 55     print('Moving to initial position')
 56     target = ik.setPitchRanges((0.0, 0.12, 0.15), -90, -180, 0) # Kinematics     solution
 57     if target: # Determine if there is a solutiton
 58         servo_data = target[1]
 59         # Move the arm
 60         bus_servo_control.set_servos(joints_pub, 1500, ((1, 200), (2, 500),     (3, servo_data['servo3']),
 61                         (4, servo_data['servo4']),(5, servo_data['servo5']),    (6, servo_data['servo6'])))
 62 
 63     time.sleep(1) # Delay for 1 sec
 64 
 65 #     Board.setBuzzer(1)        # Buzzer on
 66 #     time.sleep(0.25)  # Delay 0.25 sec
 67 #     Board.setBuzzer(0)        # Buzzer off
 68 
 69     time.sleep(2) # Wait 2 sec?
 70 
 71 
 72     # move 0.15 m in the x-axis
 73     print('Moving 0.15 m in the x-axis')
 74     target = ik.setPitchRanges((0, 0.2, 0.15), -90, -180, 0)
 75     if target:
 76         servo_data = target[1]
 77         bus_servo_control.set_servos(joints_pub, 1500, ((1, 200), (2, 500),     (3, servo_data['servo3']),
 78                         (4, servo_data['servo4']),(5, servo_data['servo5']),(6, servo_data['servo6'])))
 79 
 80     time.sleep(1)
 81 
 82 #     Board.setBuzzer(1)
 83 #     time.sleep(0.25)
 84 #     Board.setBuzzer(0)
 85 
 86     time.sleep(2)
 87 
 88     # Move 0.20 m in the z-axis
 89     print('Moving 0.20 m in the z-axis')
 90     target = ik.setPitchRanges((0, 0.2, 0.20), -90, -180, 0)
 91     if target:
 92         servo_data = target[1]
 93         bus_servo_control.set_servos(joints_pub, 1500, ((1, 200), (2, 500), (3, servo_data['servo3']),
 94                         (4, servo_data['servo4']),(5, servo_data['servo5']),(6, servo_data['servo6'])))
 95 
 96     time.sleep(1)
 97 
 98 #     Board.setBuzzer(1)
 99 #     time.sleep(0.25)
100 #     Board.setBuzzer(0)
101 
102     time.sleep(2)
103 
104     # Move somewhere
105     print('Moving somewhere')
106     target = ik.setPitchRanges((-0.2, 0.2, 0.2), -90, -180, 0)
107     if target:
108         servo_data = target[1]
109         bus_servo_control.set_servos(joints_pub, 1500, ((1, 200), (2, 500), (3, servo_data['servo3']),
110                         (4, servo_data['servo4']),(5, servo_data['servo5']),(6, servo_data['servo6'])))
111 
112     time.sleep(1)
113 
114 #     Board.setBuzzer(1)
115 #     time.sleep(0.25)
116 #     Board.setBuzzer(0)
117 
118     time.sleep(2)
119 
120     # Return to initial position
121     print('Moving to initial position')
122     target = ik.setPitchRanges((0.2, 0.2, 0.2), -90, -180, 0)
123     if target:
124         servo_data = target[1]
125         bus_servo_control.set_servos(joints_pub, 1500, ((1, 200), (2, 500), (3, servo_data['servo3']),
126                         (4, servo_data['servo4']),(5, servo_data['servo5']),(6, servo_data['servo6'])))
127     time.sleep(1)
128 
129 #     Board.setBuzzer(1)
130 #     time.sleep(0.25)
131 #     Board.setBuzzer(0)
132 
133     time.sleep(3)
134 
135     print('Program run complete')
136 
